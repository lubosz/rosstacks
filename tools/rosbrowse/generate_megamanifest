#!/usr/bin/env ruby
require 'uri/generic.rb'
require 'rexml/document'

rf = File.open('repos','r')
reps = [ ]
while line = rf.gets
  next if line[0,1] == "#"
  reps << line.strip.split
end
reps.each do |rep|
  friendly = rep[0]
  uri = URI.parse(rep[1])
  if !File.exist? "checkouts/#{friendly}"
    puts "checking out #{friendly} from #{uri.host}"
    system("mkdir -p checkouts/#{friendly}")
    system("cd checkouts/#{friendly} && svn co #{rep[1]} .")
  else
    puts "updating #{friendly} from #{uri.host}"
    system("cd checkouts/#{friendly} && svn up")
  end
end
all_pkgs = { }
reps.each do |rep|
  friendly = rep[0]
  unfriendly = rep[1]
  puts "snarfing manifests in local copy of #{friendly}"
  uri = URI.parse(unfriendly)
  ENV['ROS_PACKAGE_PATH'] = "#{`pwd`.strip}/checkouts/#{friendly}"
  ENV['ROS_ROOT'] = "#{`pwd`.strip}/checkouts/ros"
  pkgs = `rospack list`.each do |pkg|
    #puts "#{pkg.split[0]}   #{pkg.split[1]}"
    if !all_pkgs.has_key?(pkg.split[0])
      all_pkgs[pkg.split[0]] = [pkg.split[1], friendly, unfriendly]
    end
    #in_ros = pkg.split[1].index("#{`pwd`.strip}/checkouts/ros")
    #all_pkgs[pkg.split[0]] = [pkg.split[1], (in_ros ? 'ros' : friendly), (in_ros ? 'https://code.ros.org/svn/ros/stacks/ros/tags/stable' : unfriendly)]
  end
end
megamanifest = REXML::Document.new
megamanifest << REXML::XMLDecl.new
pkgs_node = megamanifest.add_element 'pkgs'
all_pkgs.each do |k, v|
  begin
    manifest = REXML::Document.new File.new("#{v[0]}/manifest.xml")
    manifest.root.add_attribute("name", k)
    manifest.root.add_attribute("repo", v[1])
    manifest.root.add_attribute("repo_host", v[2])
    repo_root = `pwd`.strip + '/checkouts/' + v[1]
    manifest.root.add_attribute("path", v[0][v[0].index(repo_root)+repo_root.length,:end])
    pkgs_node.add(manifest.root)
  rescue 
    puts v.inspect
    puts "error parsing #{v[0]}/manifest.xml: #{$!}"
    puts "repo_root = #{repo_root}"
    exit
  end
end
puts "writing megamanifest..."
megamanifest.write(File.new("megamanifest.xml",'w')) #, 2)

