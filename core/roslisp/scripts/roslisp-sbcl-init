;; Initialization for sbcl when compiling roslisp


(require :asdf)

;; Add appropriate paths for asdf to look for things, using rospack to find the base directory
(let ((str (make-string-output-stream)))
  (sb-ext:run-program "rospack" '("find" "roslisp") :search t :output str)
  (let ((pathstr (delete #\Newline (get-output-stream-string str))))
    (when (search "couldn't find package" pathstr)
      (format t "~&~a~&" pathstr)
      (sb-ext:quit))
    (unless (eql (char pathstr (1- (length pathstr))) #\/)
      (setf pathstr (concatenate 'string pathstr "/")))
    (let ((roslisp-base (pathname pathstr)))
      (push roslisp-base asdf:*central-registry*)
      (push (merge-pathnames #P"s-xml/" roslisp-base) asdf:*central-registry*)
      (push (merge-pathnames #P"s-xml-rpc/" roslisp-base) asdf:*central-registry*))))


;; Assumption is that you do your development in interactive mode, so by the time we get to the point of compiling to standalone executables, we should optimize
(declaim (optimize speed space))
(declaim (sb-ext:muffle-conditions sb-ext:compiler-note))


(format t "~&Finished reading roslisp-sbcl-init")