/**
\mainpage
\htmlinclude manifest.html


\b rospy is the Python implementation of the <a href="http://pr.willowgarage.com/wiki/ROS/client_libs">ROS client APIs</a>. In particular, it implements:

- a ROS master (see \ref master)
- the ROS slave node API and additional \ref clientapi 
- message and services generators (\ref genmsg_py and \ref gensrv_py)


\section codeapi Code API

- \ref clientapi
- \ref rospy::masterslave::ROSHandler : Slave node XML-RPC API
- \ref rospy::masterslave::ROSMasterHandler : Master XML-RPC API



\section rosapi ROS API

List of nodes:
- \b zenmaster

<hr>

\subsection master zenmaster

rospy implements a <a
href="http://pr.willowgarage.com/wiki/Master">Master node</a>, which
is a special node that all other nodes talk to as a name service. The
rospy build process places zenmaster in \p $ROS_ROOT/bin so that the
executable is accessible on your shell's path.

By default, all master's come up on port 11311.

\subsubsection Usage
\verbatim
$ zenmaster [-p port]
\endverbatim

\par Example

\verbatim
$ zenmaster
\endverbatim


\subsubsection topics ROS topics

Subscribes to:
- \b "/time": [roslib/Time] current ROS time

Publishes to:
- \b "/rosout": [roslib/Log] system log messages

<hr>

\section commandline Command-line tools

\subsection genmsg_py

\b genmsg_py is an internal tool that should never have be run explicitly at the 
command line. Instead, it is invoked as part of an auto-generator-discovery
routine in \b roslib/scripts/genmsg.

genmsg_py is the Python implementation of ROS message generators. It
converts <a
href="http://pr.willowgarage.com/wiki/ROS/Message_Description_Language">.msg
files</a> into Python code. In order to obey rospy package naming conventions,
the generated code is placed in \p packagename/src/packagename/msg/ .

\subsubsection Usage
\verbatim
$ ./genmsg_py [msg files...]
\endverbatim

\par Example

\verbatim
$ ./genmsg_py msg/Message.msg
\endverbatim

\subsection gensrv_py

\b gensrv_py is an internal tool that should never have be run explicitly at the 
command line. Instead, it is invoked as part of an auto-generator-discovery
routine in \b roslib/scripts/gensrv.

gensrv_py is the Python implementation of ROS service generators. It
converts <a
href="http://pr.willowgarage.com/wiki/ROS/Service_Description_Language">.srv
files</a> into Python code. In order to obey rospy package naming conventions,
the generated code is placed in \p packagename/src/packagename/srv/ .

\subsubsection Usage
\verbatim
$ ./gensrv_py [srv files...]
\endverbatim

\par Example

\verbatim
$ ./gensrv_py srv/Service.srv
\endverbatim

*/